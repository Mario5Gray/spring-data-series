---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  http-source-polls:
    image: springcloudstream/http-source-kafka:3.2.1
    container_name: http-polls
    ports:
      - "9091:9091"
    depends_on:
      - broker
    environment:
      SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_DESTINATION: polls
      SERVER_PORT: 9091
      MANAGEMENT_WAVEFRONT_METRICS_EXPORT_ENABLED: false
      MANAGEMENT_DATADOG_METRICS_EXPORT_ENABLED: false
      HTTP_PATH-PATTERN: '/polls'
      HTTP_CORS_ALLOWED-HEADERS: messagekey
      HTTP_MAPPED-REQUEST-HEADERS: messagekey
      SPRING_CLOUD_STREAM_KAFKA_BINDINGS_OUTPUT_PRODUCER_MESSAGEKEYEXPRESSION: "T(java.lang.Long).parseLong(headers['messagekey'].toString())"
      SPRING_KAFKA_BOOTSTRAP-SERVERS: 'broker:29092'
      SPRING_KAFKA_PRODUCER_KEY-SERIALIZER: org.apache.kafka.common.serialization.LongSerializer

  http-source-votes:
    image: springcloudstream/http-source-kafka:3.2.1
    container_name: http-votes
    ports:
      - "9090:9090"
    depends_on:
      - broker
    environment:      
      SPRING_CLOUD_STREAM_BINDINGS_OUTPUT_DESTINATION: votes
      SERVER_PORT: 9090
      MANAGEMENT_WAVEFRONT_METRICS_EXPORT_ENABLED: false 
      MANAGEMENT_DATADOG_METRICS_EXPORT_ENABLED: false 
      HTTP_PATH-PATTERN: '/vote'
      HTTP_CORS_ALLOWED-HEADERS: messagekey 
      HTTP_MAPPED-REQUEST-HEADERS: messagekey
      SPRING_CLOUD_STREAM_KAFKA_BINDINGS_OUTPUT_PRODUCER_MESSAGEKEYEXPRESSION: "T(java.lang.Long).parseLong(headers['messagekey'].toString())"
      SPRING_KAFKA_BOOTSTRAP-SERVERS: 'broker:29092'
      SPRING_KAFKA_PRODUCER_KEY-SERIALIZER: org.apache.kafka.common.serialization.LongSerializer

  stream-count-votes:
    image: polls:0.0.1-SNAPSHOT
    container_name: stream-count-votes
    depends_on:
      - broker, http-source-polls, http-source-votes
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: 'broker:29092'
      SPRING_PROFILES_ACTIVE: count

  stream-poll-results:
    image: polls:0.0.1-SNAPSHOT
    container_name: stream-poll-results
    depends_on:
      - broker, http-source-polls, http-source-votes
    environment:
      SPRING_KAFKA_BOOTSTRAP-SERVERS: 'broker:29092'
      SPRING_PROFILES_ACTIVE: results

  ws-sink-results:
    image: springcloudstream/websocket-sink-kafka:3.2.1
    container_name: ws-sink-results
    depends_on:
      - broker, stream-count-votes
    ports:
      - "9095:9095"
      - "9096:9096"      
    environment:
      SPRING_CLOUD_STREAM_BINDINGS_INPUT_DESTINATION: results
      MANAGEMENT_WAVEFRONT_METRICS_EXPORT_ENABLED: false
      MANAGEMENT_DATADOG_METRICS_EXPORT_ENABLED: false
      WEBSOCKET_CONSUMER_PORT: 9095
      SERVER_PORT: 9096
      WEBSOCKET_CONSUMER_PATH: '/ws'    
      SPRING_KAFKA_BOOTSTRAP-SERVERS: 'broker:29092'
      SPRING_KAFKA_CONSUMER_KEY-DESERIALIZER: org.apache.kafka.common.serialization.LongDeserializer
      SPRING_KAFKA_CONSUMER_VALUE-DESERIALIZER: org.apache.kafka.common.serialization.StringDeserializer
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_FN_CONSUMER_WEBSOCKET: TRACE
      ENDPOINTS.WEBSOCKETCONSUMERTRACE.ENABLED: true